apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'android-aspectjx'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.lazyxu.mvvmlazy"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "1.0"
//        multiDexEnabled true
        resConfigs "zh"
        vectorDrawables.useSupportLibrary = true
        ndk {//选择要添加的对应cpu类型的.so库，armeabi-v7a、arm64-v8a这两个占据99%
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }
    }
    //=========== 在所有module中都要添加  begin=============
    kapt {
        generateStubs = true
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }
//    buildConfigField "String", "APP_ID_2", "\"${APP_ID_2_VALUE}\""

    buildFeatures {
        dataBinding = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
    //=========== 在所有module中都要添加  begin=============

    buildTypes {
        debug {
            // 代码混淆
            minifyEnabled false
            // 移除无用的resource文件
            shrinkResources false
//            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            // 代码混淆
            minifyEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation 'junit:junit:4.13'

    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui:1.0.0'
    implementation "android.arch.navigation:navigation-ui-ktx:1.0.0"
    implementation "android.arch.navigation:navigation-fragment-ktx:1.0.0"


    if (rootProject.ext.isModule) {
        implementation project(':basez_common')

    } else {
        implementation project(':film')
        implementation project(':user')
    }
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation 'com.github.hackware1993:MagicIndicator:1.6.0'

}
